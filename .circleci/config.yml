---
version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.2.5
  node: circleci/node@5.0.2
jobs:
  build:
    working_directory: ~/figgy
    docker:
      - image: pulibrary/ci-figgy:1.3
        environment:
          RAILS_ENV: test
          FIGGY_DB_HOST: localhost
          FIGGY_DB_USERNAME: figgy
          FIGGY_DB_PASSWORD: ""
          PSQL_PAGER: ''
      - image: postgres:10.6-alpine
        environment:
          POSTGRES_USER: figgy
          POSTGRES_DB: figgy_test
          POSTGRES_HOST_AUTH_METHOD: trust
    resource_class: large
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: remove errant LICENSE file
          command: rm LICENSE.chromedriver
      - checkout
      - node/install:
          install-yarn: true
          node-version: '16.15.0'
      - run:
          name: Check current version of node
          command: node -v
      # Restore Cached Dependencies
      - restore_cache:
          keys:
            - figgy-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}-20230112
      # Install Bundler
      - run: gem install bundler -v '2.3.18'
      # Bundle install dependencies
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: figgy-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}-20230112
          paths:
            - ./vendor/bundle
      - run:
          name: Install NPM Dependencies via Yarn
          command: yarn install --frozen-lockfile
      - run:
          name: Install Cloud Fixity NPM Dependencies via Yarn
          command: |
            cd cloud_fixity
            yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: figgy-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: '~/figgy'
          paths: '*'
  test:
    working_directory: ~/figgy
    docker:
      - image: pulibrary/ci-figgy:1.3
        environment:
          RAILS_ENV: test
          FIGGY_DB_HOST: localhost
          FIGGY_DB_USERNAME: figgy
          FIGGY_DB_PASSWORD: ""
          MEDIAINFO_PATH: /usr/bin/mediainfo
          PSQL_PAGER: ''
      - image: postgres:10.6-alpine
        environment:
          POSTGRES_USER: figgy
          POSTGRES_DB: figgy_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: solr:7.7-alpine
        command: bin/solr -cloud -noprompt -f -p 8984
    resource_class: large
    parallelism: 4
    environment:
      SPEC_OPTS: --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      COVERALLS_PARALLEL: true
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - attach_workspace:
          at: '~/figgy'
      - node/install:
          install-yarn: true
          node-version: '16.15.0'
      - run:
          name: Check current version of node
          command: node -v
      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      # Install Bundler
      - run: gem install bundler -v '2.3.18'
      # Bundle install dependencies
      - run: bundle install --path vendor/bundle
      - run: yarn exec jest --coverage
      - run:
          name: Run Cloud Fixity tests
          command: |
            cd cloud_fixity
            yarn install
            yarn test
      - run:
          name: Load config into solr
          command: |
            cd solr/config
            zip -1 -r solr_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://localhost:8984/solr/admin/configs?action=UPLOAD&name=figgy"
            curl -H 'Content-type: application/json' http://localhost:8984/api/collections/ -d '{create: {name: figgy-core-test, config: figgy, numShards: 1}}'
      - run: bundle exec rake db:environment:set
      - run: bundle exec rake db:migrate
      - run:
          name: Run rspec in parallel
          command: |
            mkdir /tmp/test-results
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - run:
          name: Stash Coverage Results
          command: |
            mkdir coverage_results
            cp -R coverage/.resultset.json coverage_results/.resultset-${CIRCLE_NODE_INDEX}.json
      - persist_to_workspace:
          root: '~/figgy'
          paths: 'coverage_results'
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  coverage_report:
    working_directory: ~/figgy
    docker:
      - image: pulibrary/ci-figgy:1.3
    resource_class: large
    steps:
      - attach_workspace:
          at: '~/figgy'
      - run: gem install simplecov -v '~> 0.21.2'
      - run: gem install activesupport -v 6.0.5
      - run:
          name: Merge and check coverage
          command: |
            RAILS_ENV=test ruby ./scripts/combine_coverage.rb
      - store_artifacts:
          path: ~/figgy/coverage
          destination: coverage
  rubocop:
    working_directory: ~/figgy
    docker:
      - image: pulibrary/ci-figgy:1.3
        environment:
          RAILS_ENV: test
          FIGGY_DB_HOST: localhost
          FIGGY_DB_USERNAME: figgy
          FIGGY_DB_PASSWORD: ""
          PSQL_PAGER: ''
    resource_class: large
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - attach_workspace:
          at: '~/figgy'
      - node/install:
          install-yarn: true
          node-version: '16.15.0'
      - run:
          name: Check current version of node
          command: node -v
      - run: gem install bundler -v '2.3.18'
      - run: bundle install --path vendor/bundle
      - run: bundle exec spring stop
      - run: bundle exec rake rubocop
      - run: yarn lint
workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - rubocop:
          requires:
            - build
      - coverage_report:
          requires:
            - test

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - build
      - test:
          requires:
            - build
      - rubocop:
          requires:
            - build
      - coverage_report:
          requires:
            - test
