x-app: &default-app
  platform: "linux/amd64"
  env_file:
    - ".env"
  build:
    context: "."
    target: "app"
    args:
      - "RAILS_ENV=${RAILS_ENV:-production}"
      - "NODE_ENV=${NODE_ENV:-production}"
      - "SIDEKIQ_CREDENTIALS=${SIDEKIQ_CREDENTIALS}"
  # depends_on:
  #   postgres:
  #     condition: "service_started"
  #     required: false
  #   redis:
  #     condition: "service_started"
  #     required: false
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true
  volumes:
    - "${DOCKER_WEB_VOLUME:-./public:/opt/app/public}"
services:
  postgres:
    environment:
      POSTGRES_USER: "figgy"
      POSTGRES_PASSWORD: "figgy"
      POSTGRES_DB: "figgy"
    image: "postgres:15.5-bookworm"
    profiles: ["dev"]
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    volumes:
      - "postgres:/var/lib/postgresql/data"
  redis:
    image: "redis:7.2.3-bookworm"
    profiles: ["dev"]
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    volumes:
      - "redis:/data"
  solr:
    image: "solr:7.7"
    profiles: ["dev"]
    volumes:
      - "./solr/config:/figgy/conf"
    command: "solr-precreate figgy /figgy"
  web:
    <<: *default-app
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS:-0}"
          memory: "${DOCKER_WEB_MEMORY:-0}"
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-curl localhost:8000/up}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    ports:
      - "${DOCKER_WEB_PORT_FORWARD:-127.0.0.1:8000}:${PORT:-8000}"
    profiles: ["web"]
volumes:
  postgres: {}
  redis: {}
